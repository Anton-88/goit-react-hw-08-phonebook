{"version":3,"sources":["utils/motionVar.js","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","pages/ContactsView/ContactsView.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/ContactsView/ContactsView.jsx"],"names":["variants","initial","scale","animate","exit","transition","ease","duration","module","exports","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","toast","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","useDispatch","useSelector","contactsSelectors","useState","setName","setNumber","handleChange","e","target","value","resetInput","className","styles","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","info","contactsOperations","label","input","type","onChange","placeholder","format","mask","pattern","Button","variant","color","size","LoaderComponent","Filter","length","contactsActions","filterContact","ContactList","filteredContacts","ul","list","map","id","li","item","IconButton","onClick","p","ContactsView","useEffect","wrapper"],"mappings":"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","file":"static/js/contacts page.cad95ec1.chunk.js","sourcesContent":["export const variants = {\r\n    initial: {scale: 0},\r\n    animate: {scale: 1},\r\n    exit: {scale: 0},\r\n    transition: {ease: 'easeOut', duration: 0.3},\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3sO1m\",\"label\":\"ContactForm_label__1En3t\",\"input\":\"ContactForm_input__1yajH\",\"btn\":\"ContactForm_btn__144Hj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1KQZ8\",\"input\":\"Filter_input__2g5r2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2Ftq7\",\"item\":\"ContactList_item__MrBdu\",\"info\":\"ContactList_info__23ys7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsView_wrapper__8UA_3\"};","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => {\r\n      dispatch(fetchContactsError(error));\r\n\r\n\r\n      toast.error('Please reload page!');\r\n    });\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => {\r\n      dispatch(addContactError(error));\r\n\r\n      toast.error('Please reload page!');\r\n    });\r\n};\r\n\r\nexport const deleteContact = (contactId) => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => {\r\n      dispatch(deleteContactError(error));\r\n\r\n      toast.error(' Please reload page!');\r\n    });\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getLoading = state => state.contacts.isLoading;\r\nexport const getError = state => state.contacts.error;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoaderComponent from '../LoaderComponent';\r\nimport { toast } from 'react-toastify';\r\nimport NumberFormat from 'react-number-format';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm() {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(contactsSelectors.getContacts);\r\n    const isLoading = useSelector(contactsSelectors.getLoading);\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const checkRepeatName = name => {\r\n        return contacts.find(\r\n            contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n        );\r\n    };\r\n\r\n    const checkRepeatNumber = number => {\r\n        return contacts.find(contact => contact.number === number);\r\n    };\r\n\r\n    const checkEmptyQuery = (name, number) => {\r\n        return name.trim() === '' || number.trim() === '';\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (checkRepeatName(name)) {\r\n            return toast(`${name} is already in your contacts`);\r\n        } else if (checkRepeatNumber(number)) {\r\n            return toast(`${number} is already in your contacts`);\r\n        } else if (checkEmptyQuery(name, number)) {\r\n            return toast.info(\"Enter the contact's name and number phone\");\r\n        } else {\r\n            dispatch(contactsOperations.addContact(name, number));\r\n        }\r\n        resetInput();\r\n    };\r\n\r\n    const resetInput = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n            <label className={styles.label}>\r\n                Name\r\n                <input\r\n                    className={styles.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Enter name\"\r\n                />\r\n            </label>\r\n            <label className={styles.label}>\r\n                Number\r\n                <NumberFormat\r\n                    placeholder=\"Enter phone number\"\r\n                    format=\"(###) ###-##-##\"\r\n                    mask=\"_\"\r\n                    pattern=\"^[0-9\\s\\(\\)\\-]{15}\"\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    className={styles.input}\r\n                />\r\n            </label>\r\n\r\n            {!isLoading && (\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                >\r\n                    Add contact\r\n                </Button>\r\n            )}\r\n\r\n            {isLoading && <LoaderComponent />}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { variants } from '../../utils/motionVar';\r\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter() {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(contactsSelectors.getFilter);\r\n    const contacts = useSelector(contactsSelectors.getContacts);\r\n\r\n    return (\r\n        <>\r\n            {contacts.length > 0 && (\r\n                <AnimatePresence>\r\n                    <label className={styles.label}>\r\n                        <motion.input\r\n                            initial=\"initial\"\r\n                            animate=\"animate\"\r\n                            exit=\"exit\"\r\n                            transition=\"transition\"\r\n                            variants={variants}\r\n                            className={styles.input}\r\n                            type=\"text\"\r\n                            value={filter}\r\n                            placeholder=\"Please, enter value to find contact...\"\r\n                            onChange={e =>\r\n                                dispatch(contactsActions.filterContact(e.target.value))\r\n                            }\r\n                        />\r\n                    </label>\r\n                </AnimatePresence>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { variants } from '../../utils/motionVar';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList() {\r\n    const dispatch = useDispatch();\r\n    const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\r\n    const contacts = useSelector(contactsSelectors.getContacts);\r\n\r\n    return (\r\n        <>\r\n            {contacts.length > 0 && (\r\n                <motion.ul className={styles.list}>\r\n                    <AnimatePresence>\r\n                        {filteredContacts.map(({ id, name, number }) => (\r\n                            <motion.li\r\n                                className={styles.item}\r\n                                key={id}\r\n                                initial=\"initial\"\r\n                                animate=\"animate\"\r\n                                exit=\"exit\"\r\n                                transition=\"transition\"\r\n                                variants={variants}\r\n                            >\r\n                                <p className={styles.info}>\r\n                                    <b>{name}</b>\r\n                                    <em>{number}</em>\r\n                                </p>\r\n                                <IconButton\r\n                                    aria-label=\"delete\"\r\n                                    color=\"secondary\"\r\n                                    type=\"button\"\r\n                                    onClick={() => dispatch(contactsOperations.deleteContact(id))}\r\n                                >\r\n                                    Del\r\n                                </IconButton>\r\n                            </motion.li>\r\n                        ))}\r\n                    </AnimatePresence>\r\n                </motion.ul>\r\n            )}\r\n\r\n            {!contacts.length && (\r\n                <AnimatePresence>\r\n                    <motion.p\r\n                        initial=\"initial\"\r\n                        animate=\"animate\"\r\n                        exit=\"exit\"\r\n                        transition=\"transition\"\r\n                        variants={variants}\r\n                    >\r\n                        No contacts in your phonebook, please add some!\r\n                    </motion.p>\r\n                </AnimatePresence>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport ContactForm from '../../components/ContactForm';\r\nimport Filter from '../../components/Filter';\r\nimport ContactList from '../../components/ContactList';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport styles from './ContactsView.module.css';\r\n\r\nexport default function ContactsView() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <h1>Phonebook</h1>\r\n            <ContactForm />\r\n            <h2>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}